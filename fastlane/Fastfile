update_fastlane
default_platform :ios

platform :ios do
  # before_all do
  #   cocoapods
  # end

  desc "Runs all the tests"
  lane :test do

  end
  
  desc "Certs"
  lane :certificates do
    match(type: "appstore")
    match(type: "adhoc")
    match(type: "development")
  end
  
  lane :register_test_devices do
    register_devices(
      devices: {
        "iPhone X" => "9db4805265d01046d7303a6e70d03e223456b9a7"
      }
    )
  end
  
  desc "CI build"
  lane :ci_build do
    certificates
    increment_build_number build_number: get_version_number + "." + Time.new.strftime("%y%m%d.%H%M")

    # build
    gym(
			workspace: "Dodies.lv.xcworkspace",
			scheme: "Dodies.lv",
			clean: true,
			output_name: "Dodies.lv.ipa",
      export_options: {
        method: "ad-hoc",
        provisioningProfiles: { 
          "com.fassko.Dodies-lv" => "match AdHoc com.fassko.Dodies-lv"
        }
      }
    )
    
    if is_ci? && (ENV["CIRCLE_PULL_REQUEST"] != "false" || ENV["TRAVIS_PULL_REQUEST"] != "false")
      testflight(
        skip_waiting_for_build_processing: true
      )
    end
    
  end
  
  desc "Circle CI lane"
  lane :circleci do
    setup_circle_ci
    ci_build
  end

  desc "Travis lane"
  lane :travis do
    setup_travis
    ci_build
  end

  desc "Submit a new Beta Build to Apple TestFlight"
  desc "This will also make sure the profile is up to date"
  lane :beta do
    certificates
    
    increment_build_number build_number: get_version_number + "." + Time.new.strftime("%y%m%d.%H%M")

    clear_derived_data
    
    gym(
      workspace: "Dodies.lv.xcworkspace",
      scheme: "Dodies.lv",
      clean: true,
      output_name: "Dodies.lv.ipa",
      include_symbols: true
    )

    dsym_zip

    copy_artifacts(
      target_path: 'artifacts',
      artifacts: ['*.dSYM.zip']
    )

    # crashlytics(
    #   api_token: "34be06edc6f733a743335744b07a23f6a3e5b344",
    #   build_secret: "a9207ff06b3417aa4bf8c6408432761ca87c5b52dca8f2365b133eea61d407cc",
    #   groups: "dodies",
    #   emails: ["fassko@gmail.com","normis@normis.info"], 
    #   notes: "Automatic iOS Build"
    # )
    
    pilot(
      skip_waiting_for_build_processing: true
    )
  end

  lane :release do
    certificates
    sigh
    
    increment_build_number(
      build_number: Time.new.strftime("%Y%m%d.%H%M%S")
    )

    clear_derived_data

    gym(
      workspace: "Dodies.lv.xcworkspace",
      scheme: "Dodies.lv",
      clean: true,
      output_name: "Dodies.lv.ipa",
      include_symbols: true
    )

    dsym_zip

    copy_artifacts(
      target_path: 'artifacts',
      artifacts: ['*.dSYM.zip']
    )

    deliver
  end

  lane :build do
    gym(
      workspace: "Dodies.lv.xcworkspace",
      scheme: "Dodies.lv",
      clean: true,
      output_name: "Dodies.lv.ipa",
      use_legacy_build_api: true
    )
  end

  after_all do |lane|

  end

  error do |lane, exception|

  end
end
